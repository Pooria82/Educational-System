/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Client;

import org.json.simple.JSONObject;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.util.HashMap;
import java.util.ArrayList;

/**
 * @author Pooria
 */
public class SelectVahed extends JDialog {

    /**
     * Creates new form Sample1
     */
    String[] sslist, sslist2;
    ArrayList<HashMap> taken = new ArrayList<>();
    int limit = 24,id;
    ArrayList<HashMap> all;

    public SelectVahed(ArrayList<HashMap> list,int id) {
        this.id  = id;
        ArrayList<String> slist = new ArrayList<>();
        all = list;
        slist.add("id - name - field - vahed - vahedlimit - teacherid");
        for (HashMap i : list) {
            slist.add("" + (int) i.get("id") + " - " + (String) i.get("name") + " - " + (String) i.get("field") + " - " + (int) i.get("vahed") + " - " + (int) i.get("vahedlimit") + " - " + (int) i.get("teacherid"));
        }
        sslist = new String[slist.size()];
        int j = 0;
        for (String i : slist) {
            sslist[j] = i;
            j++;
        }
        initComponents();
        this.setModal(true);
        this.setVisible(true);
//
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new Panel();
        jPanel1 = new JPanel();
        jScrollPane2 = new JScrollPane();
        UnitsList = new JList<>();
        jScrollPane3 = new JScrollPane();
        jList3 = new JList<>();
        jButton2 = new JButton();
        jTextField1 = new JTextField();
        jLabel1 = new JLabel();
        jButton1 = new JButton();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jButton3 = new JButton();

        GroupLayout panel1Layout = new GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
                panel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
                panel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );


        UnitsList.setModel(new AbstractListModel<String>() {
            String[] strings = sslist;

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        jScrollPane2.setViewportView(UnitsList);

        jList3.setModel(new AbstractListModel<String>() {
            String[] strings = {};

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        jScrollPane3.setViewportView(jList3);

        jButton2.setText("ADD");
        jButton2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setMaximumSize(new Dimension(50, 30));
        jTextField1.setMinimumSize(new Dimension(50, 30));
        jTextField1.setPreferredSize(new Dimension(50, 30));
        jTextField1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new Font("Perpetua Titling MT", 1, 12)); // NOI18N
        jLabel1.setText("Enter the desired course unit ID:");
        jLabel1.setToolTipText("");
        jLabel1.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        jLabel1.setMaximumSize(new Dimension(300, 50));
        jLabel1.setMinimumSize(new Dimension(300, 50));
        jLabel1.setName(""); // NOI18N

        jButton1.setText("REMOVE");
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new Font("Showcard Gothic", 0, 18)); // NOI18N
        jLabel2.setText("List of Units:");

        jLabel3.setFont(new Font("Showcard Gothic", 0, 18)); // NOI18N
        jLabel3.setText("Selected Units:");

        jButton3.setText("SUBMIT");
        jButton3.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 142, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jScrollPane3, GroupLayout.PREFERRED_SIZE, 145, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 7, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 248, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addGap(74, 74, 74))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(jButton2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButton1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButton3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jScrollPane3, GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                                                        .addComponent(jScrollPane2)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(80, 80, 80)
                                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jTextField1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton2)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton1)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton3)))
                                .addContainerGap())
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            if (!jTextField1.getText().equals("")) {
                for (HashMap item : all) {
                    if (Integer.parseInt(jTextField1.getText()) == (int) item.get("id") && limit >= (int) item.get("vahed")) {
                        taken.add(new HashMap(item));
                        limit -= (int) item.get("vahed");
                        break;
                    }
                }
                ArrayList<String> slist2 = new ArrayList<>();
                slist2.add("id - name - field - vahed - vahedlimit - teacherid");
                for (HashMap i : taken) {
                    slist2.add("" + (int) i.get("id") + " - " + (String) i.get("name") + " - " + (String) i.get("field") + " - " + (int) i.get("vahed") + " - " + (int) i.get("vahedlimit") + " - " + (int) i.get("teacherid"));
                }
                sslist2 = new String[slist2.size()];
                int j = 0;
                for (String i : slist2) {
                    sslist2[j] = i;
                    j++;
                }
                jList3.setModel(new AbstractListModel<String>() {
                    String[] strings = sslist2;

                    public int getSize() {
                        return strings.length;
                    }

                    public String getElementAt(int i) {
                        return strings[i];
                    }
                });
            }

        } catch (Exception ex) {

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            if (!jTextField1.getText().equals("")) {
                for (HashMap item : all) {
                    if (Integer.parseInt(jTextField1.getText()) == (int) item.get("id")) {
                        taken.remove(item);
                        limit += (int) item.get("vahed");
                        break;
                    }
                }
                ArrayList<String> slist2 = new ArrayList<>();
                slist2.add("id - name - field - vahed - vahedlimit - teacherid");
                for (HashMap i : taken) {
                    slist2.add("" + (int) i.get("id") + " - " + (String) i.get("name") + " - " + (String) i.get("field") + " - " + (int) i.get("vahed") + " - " + (int) i.get("vahedlimit") + " - " + (int) i.get("teacherid"));
                }
                sslist2 = new String[slist2.size()];
                int j = 0;
                for (String i : slist2) {
                    sslist2[j] = i;
                    j++;
                }
                jList3.setModel(new AbstractListModel<String>() {
                    String[] strings = sslist2;

                    public int getSize() {
                        return strings.length;
                    }

                    public String getElementAt(int i) {
                        return strings[i];
                    }
                });
            }

        } catch (Exception ex) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            ArrayList<HashMap> ans = new ArrayList<>();
            for (HashMap i : taken) {
                HashMap temp = new HashMap();
                temp.put("lessonid", i.get("id"));
                temp.put("userid", id);
                ans.add(new HashMap(temp));
                JSONObject jobj = new JSONObject();
                jobj.put("command", "new selection");
                jobj.put("new selection",ans);
                Login.outputStream.writeObject(jobj);
                Login.outputStream.flush();
                JSONObject x = (JSONObject) Login.inputStream.readObject();
                boolean xx = (Boolean) x.get("valid");
                if (xx) {
                    this.dispose();
                }
            }
        }catch (Exception ex){

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JList<String> UnitsList;
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton3;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JList<String> jList3;
    private JPanel jPanel1;
    private JScrollPane jScrollPane2;
    private JScrollPane jScrollPane3;
    private JTextField jTextField1;
    private Panel panel1;
    // End of variables declaration//GEN-END:variables
}
