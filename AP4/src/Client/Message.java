package Client;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import org.json.simple.JSONObject;

import javax.swing.*;
import java.util.ArrayList;
import java.util.HashMap;

/**
 *
 * @author Pooria
 */
public class Message extends JDialog {

    /**
     * Creates new form Student
     */
    String[] sslist;
    int id;
    ArrayList<HashMap> lists;
    public Message(ArrayList<HashMap> list,int id) {
        this.id =id;
        lists= list;
        ArrayList<String> slist = new ArrayList<>();
        for (HashMap i : list) {
            slist.add(  ""+(int)i.get("id") +" - "+ (String)i.get("name") +" - "+ (String)i.get("field") +" - "+ (String)i.get("role"));
        }
        sslist = new String[slist.size()];
        int j = 0;
        for (String i : slist) {
            sslist[j] = i;
            j++;
        }
        initComponents();
        this.setModal(true);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ProfessorsListComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jTextArea2.setEditable(false);
        jButton1 = new javax.swing.JButton();



        jLabel1.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        jLabel1.setText("List of Professors");

        ProfessorsListComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(sslist));
        ProfessorsListComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfessorsListComboBoxActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton1.setText("SEND");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(ProfessorsListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addComponent(jLabel1)
                                                                .addGap(13, 13, 13)))))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ProfessorsListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap())
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(32, 32, 32))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void myshow(){
        try {
            int i = ProfessorsListComboBox.getSelectedIndex();
            int tid = (int) lists.get(i).get("id");
            JSONObject jobj = new JSONObject();
            jobj.put("command" , "get msg");
            jobj.put("firstid",id);
            jobj.put("secondid",tid);
            Login.outputStream.writeObject(jobj);
            Login.outputStream.flush();
            JSONObject x = (JSONObject) Login.inputStream.readObject();
            boolean xx = (Boolean) x.get("valid");
            if(xx){
                ArrayList<HashMap> msg = (ArrayList<HashMap>) x.get("messages");
                String msgs="";
                for(HashMap it : msg){
                    msgs += ("from " +(int)it.get("senderid") +" to "+ (int)it.get("receiverid")+" : " + it.get("msg")+"\n");
                }
                jTextArea2.setText(msgs);
            }

        }catch (Exception ex){

        }
    }
    private void ProfessorsListComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfessorsListComboBoxActionPerformed
        // TODO add your handling code here:
        myshow();

    }//GEN-LAST:event_ProfessorsListComboBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            if(!jTextArea1.getText().equals("")) {
                int i = ProfessorsListComboBox.getSelectedIndex();
                int tid = (int) lists.get(i).get("id");
                JSONObject jobj = new JSONObject();
                jobj.put("command", "send msg");
                jobj.put("senderid", id);
                jobj.put("receiverid", tid);
                jobj.put("msg",jTextArea1.getText() );
                Login.outputStream.writeObject(jobj);
                Login.outputStream.flush();
                JSONObject x = (JSONObject) Login.inputStream.readObject();
                boolean xx = (Boolean) x.get("valid");
                if (xx) {
                    myshow();
                }
            }
        }catch (Exception ex){

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ProfessorsListComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
